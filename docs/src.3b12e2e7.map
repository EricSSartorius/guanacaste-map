{"version":3,"sources":["src/config.js","src/components/popup.js","src/index.js"],"names":["MAP","ACCESS_TOKEN","name","label","feature","properties","Estación","Image","description","link","config","SOURCE_LAYER","TYPES","mapboxgl","accessToken","map","Map","Object","assign","getFeatures","querySourceFeatures","symbolType","getMarkerElement","className","markerElement","document","createElement","getPopup","Popup","setHTML","createLegendItems","div","span","labelSpan","featureSet","innerHTML","appendChild","getElementById","createMarkers","features","Marker","setLngLat","geometry","coordinates","setPopup","addTo","on","data","type","length","log","i","join"],"mappings":";AAUe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAVf,IAAMA,EAAM,CAEH,MAAA,uDACD,KAAA,KACE,OAAA,EAAE,SAAU,YAGhBC,EACJ,gGAEa,QAAA,QAAA,CAAA,IAAA,EAAA,aAAA,EAGC,aAAA,UACP,MAAA,CACL,CACQ,KAAA,aACC,MAAA,cAET,CAAEC,KAAM,UAAWC,MAAO;;ACnBf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,SAAA,GAELC,MAAAA,uCAAAA,EAAQC,WAAWC,SAGdF,kEAAAA,EAAQC,WAAWE,MACAH,sCAAAA,EAAQC,WAAWC,SAK5CF,gFAAAA,EAAQC,WAAWG,YACQJ,2CAAAA,EAAQC,WAAWI,KAZxC;;AC4Df,aA5DA,IAAA,EAAA,QAAA,YA4DA,EAAA,EAAA,GA3DA,EAAA,QAAA,sBA2DA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAzDQR,IAAAA,EAA2CS,EAA3CT,QAAAA,aAAcD,EAA6BU,EAA7BV,QAAAA,IAAKW,EAAwBD,EAAxBC,QAAAA,aAAcC,EAAUF,EAAVE,QAAAA,MAEzCC,SAASC,YAAcb,EAGvB,IAAMc,EAAM,IAAIF,SAASG,IAEvBC,OAAOC,OACLlB,EACA,CACa,UAAA,MACH,OAAA,EAAE,SAAU,WACd,KAAA,MAER,KAKEmB,EAAc,SAAA,GAClBJ,OAAAA,EAAIK,oBAAoB,YAAa,CACtBT,YAAAA,EACL,OAAA,CAAC,KAAM,SAAUU,MAIvBC,EAAmB,SAAClB,EAASmB,GAE3BC,IAAAA,EAAgBC,SAASC,cAAc,OAGtCF,OADOD,EAAAA,UAAsBA,UAAAA,EAC7BC,GAIHG,EAAW,SAAA,GAAW,OAAA,IAAId,SAASe,OAAQC,SAAQ,EAAezB,EAAAA,SAAAA,KAElE0B,EAAoB,SAAc,GAChCC,IAAAA,EAAMN,SAASC,cAAc,OAC7BM,EAAOP,SAASC,cAAc,QAC9BO,EAAYR,SAASC,cAAc,QACpCH,EAAAA,UAAsBW,UAAAA,EAAWhC,KAAtC,UACUiC,EAAAA,UAAYD,EAAW/B,OAAS,qBACtCiC,EAAAA,YAAYJ,GACZI,EAAAA,YAAYH,GACPI,SAAAA,eAAe,gBAAgBD,YAAYL,IAIhDO,EAAgB,SAACC,EAAUhB,GAC/BgB,OAAAA,EAASxB,IAAI,SAAA,GACX,OAAA,IAAIF,SAAS2B,OAAOlB,EAAiBlB,EAASmB,IAC3CkB,UAAUrC,EAAQsC,SAASC,aAC3BC,SAASjB,EAASvB,IAClByC,MAAM9B,MAGbA,EAAI+B,GAAG,OAAQ,WACPC,IAAAA,EACJnC,GACAA,EAAMG,IAAI,WAACiC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,aAEVT,EAAWpB,EAAY6B,EAAK9C,MAI3BoC,OAHWU,EAAAA,EAASA,EAAK9C,KAAhC,WAGOoC,EAAcC,EAAaS,EAAK9C,KAAvC,aAGA6C,EAAKE,SAAWrC,EAAMqC,QAChBC,QAAAA,IACHH,EAAKE,OAAyCrC,mCAAAA,EAAMG,IACrD,SAACiC,EAAMG,GAASH,OAAAA,EAAK9C,KAAS6C,KAAAA,EAAKI,GAAGF,OAAtC,MACAG,KAAK","file":"src.3b12e2e7.map","sourceRoot":"..","sourcesContent":["const MAP = {\n  // for creating mapboxgl.Map(). container defaults to 'map'\n  style: 'mapbox://styles/guanacaste/cjj079axn0aqu2so55fx6ln2x',\n  zoom: 9.18,\n  center: [-85.49304, 10.891421]\n};\n\nconst ACCESS_TOKEN =\n  'pk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImEiOiJjamowNzhuYnAwZXU2M2txczhsc21mbDVsIn0.amJMu3O1jfjcbg-B1qC7ww';\n\nexport default {\n  MAP,\n  ACCESS_TOKEN,\n  SOURCE_LAYER: 'Turismo',\n  TYPES: [\n    {\n      name: 'biological',\n      label: 'Biological'\n    },\n    { name: 'tourist', label: 'Touristo' }\n  ]\n};\n","export default feature =>\n  `<div class=\"popup-header\">\n    <h3>${feature.properties.Estación}</h3>\n    <div class=\"popup-image\">\n      <img\n        src=\"${feature.properties.Image}\"\n        alt=\"Image del Estación ${feature.properties.Estación}\"\n      />\n    </div>\n  </div>\n  <div class=\"popup-description\">\n    <p>${feature.properties.description}</p>\n    <a class=\"popup-button\" href=\"${feature.properties.link}\">Más informacíon</a>\n  </div>\n  `;\n","import config from './config';\nimport popupComponent from './components/popup';\n\nconst { ACCESS_TOKEN, MAP, SOURCE_LAYER, TYPES } = config;\n\nmapboxgl.accessToken = ACCESS_TOKEN;\n\n// instantiate the map instance\nconst map = new mapboxgl.Map(\n  // Set defaults, allow the config to override\n  Object.assign(\n    MAP,\n    {\n      container: 'map',\n      center: [-85.49304, 10.891421],\n      zoom: 9.18\n    },\n    {}\n  )\n);\n\n// Retrieve the source feature data from mapbox\nconst getFeatures = symbolType =>\n  map.querySourceFeatures('composite', {\n    sourceLayer: SOURCE_LAYER,\n    filter: ['==', 'symbol', symbolType]\n  });\n\n// Generate the marker element on the fly in the DOM, using createElement\nconst getMarkerElement = (feature, className) => {\n  // create a HTML element for each feature\n  const markerElement = document.createElement('div');\n  // append default marker classname to provided class name\n  markerElement.className = `marker ${className}`;\n  return markerElement;\n};\n\n// Create a mapboxgl.Popup from the default popup component.\nconst getPopup = feature => new mapboxgl.Popup().setHTML(popupComponent(feature));\n\nconst createLegendItems = featureSet => {\n  const div = document.createElement('div');\n  const span = document.createElement('span');\n  const labelSpan = document.createElement('span');\n  span.className = `marker ${featureSet.name}-marker`;\n  labelSpan.innerHTML = featureSet.label || 'No label specified';\n  div.appendChild(span);\n  div.appendChild(labelSpan);\n  document.getElementById('legend-items').appendChild(div);\n};\n\n// make a marker for each feature and add to the map\nconst createMarkers = (features, className) =>\n  features.map(feature =>\n    new mapboxgl.Marker(getMarkerElement(feature, className))\n      .setLngLat(feature.geometry.coordinates)\n      .setPopup(getPopup(feature))\n      .addTo(map)\n  );\n// When the map loads, generate the markers\nmap.on('load', () => {\n  const data =\n    TYPES &&\n    TYPES.map((type = 'biological') => {\n      // default is 'biological'\n      const features = getFeatures(type.name);\n      createLegendItems(type, `${type.name}-marker`);\n\n      // get the feature data and then create markers\n      return createMarkers(features, `${type.name}-marker`);\n    });\n\n  if (data.length === TYPES.length) {\n    console.log(\n      `${data.length} types of markers generated for ${TYPES.map(\n        (type, i) => `${type.name} (${data[i].length})`\n      ).join(', ')}`\n    );\n  }\n});\n"]}