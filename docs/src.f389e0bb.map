{"version":3,"sources":["src/config.js","src/components/popup.js","src/components/legend.js","src/index.js"],"names":["MAP","ACCESS_TOKEN","label","color","shape","feature","properties","link","Estación","Image","description","symbolTypes","map","symbolType","name","type","join","config","LAYER_ID","ANIMATION_DURATION","SOURCE_TYPES","LAYERS","DEFAULT_MAP","mapboxgl","accessToken","console","log","version","Map","Object","assign","window","popup","Popup","showPopup","setLngLat","geometry","coordinates","setHTML","addTo","on","flyTo","center","createCompass","leftEl","document","querySelector","compass","createElement","innerHTML","onclick","appendChild","e","features","addControl","FullscreenControl","state","nav","NavigationControl","showCompass","scrollZoom","disable","layerList","filteredLayers","getStyle","layers","filter","layerName","layer","id","substring","getElementById","handleFilter","layerOrSymbolType","classList","toggle","setLayoutProperty","activeFilters","keys","key","setFilter","noFilter","add","body","addEventListener","event","metaKey","ctrlKey","enable"],"mappings":"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","file":"src.f389e0bb.map","sourceRoot":"..","sourcesContent":["const MAP = {\n  // for creating mapboxgl.Map(). container defaults to 'map'\n  style: 'mapbox://styles/guanacaste/cjj079axn0aqu2so55fx6ln2x',\n  center: [-85.61365526723557, 10.838261234356153],\n  zoom: 9.619976883678385\n  //\"sprite\": \"mapbox://sprites/mapbox/bright-v8\"\n};\n\nconst ACCESS_TOKEN =\n  'pk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImEiOiJjamowNzhuYnAwZXU2M2txczhsc21mbDVsIn0.amJMu3O1jfjcbg-B1qC7ww';\n\nexport default {\n  LAYER_ID: 'toggle-turismo',\n  SOURCE_LAYER: 'Turismo',\n  //FLY_TO_ZOOM_LEVEL: 9.619976883678385,\n  ANIMATION_DURATION: 2000,\n  LEGEND_TITLE: 'Puestos Estaciónes y Tourismos',\n  ACCESS_TOKEN,\n  MAP,\n  SOURCE_TYPES: [\n    {\n      name: 'biological',\n      label: 'Biological',\n      icon: `<svg><use href=\"assets/svg/information-11.svg\"></use></svg>`,\n      color: 'blue'\n    },\n    {\n      name: 'tourist',\n      label: 'Touristo',\n      color: 'red'\n    }\n  ],\n  LAYERS: {\n    'toggle-turismo': { label: 'Turismo', color: '#CCCC00' },\n    'toggle-acg-unesco-2018-crtm-area-copy': { label: 'UNESCO', color: '#CCCC00', shape: 'line' }\n  }\n};\n","export default feature =>\n  `<div class=\"popup-header\">\n    <h3>\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          ${feature.properties.Estación}\n        </a>\n    </h3>\n    <div class=\"popup-image\">\n        <a\n          href=\"${feature.properties.link}\"\n          >\n          <img\n            src=\"${feature.properties.Image}\"\n            alt=\"Image del Estación ${feature.properties.Estación}\"\n          />\n        </a>\n      \n    </div>\n  </div>\n  <div class=\"popup-content\">\n    <div class=\"popup-description\">\n      <p>${feature.properties.description}</p>\n    </div>\n    <a\n      class=\"popup-button\"\n      href=\"${feature.properties.link}\"\n      >\n      Más informacíon\n    </a>\n  </div>\n  `;\n","export default symbolTypes =>\n  `<div>\n\t    <h4>Puestos Estaciónes y Tourismos</h4>\n\t\t\t<div id=\"legend-items\">\n          ${symbolTypes\n            .map(\n              symbolType => `<div class=\"legend-item active\" id=\"${\n                symbolType.name\n              }\" onClick=\"handleFilter('${symbolType.name}', '${symbolType.type || 'symbol'}')\">\n                  <span class=\"legend-key\" style=\"background-color: ${symbolType.color}\"></span>\n                  <span class=\"label\">${symbolType.label}</span>\n                </div>`\n            )\n            .join('')}\n          <div onClick=\"noFilter()\">Toggle Off Filters</div>\n\t\t\t</div>\n\t</div>`;\n","/* global mapboxgl */\n\nimport config from './config';\nimport popupComponent from './components/popup';\nimport legendComponent from './components/legend';\n\nconst { ACCESS_TOKEN, MAP, LAYER_ID, ANIMATION_DURATION, SOURCE_TYPES, LAYERS } = config;\n\nconst DEFAULT_MAP = {\n  container: 'map'\n};\n\nmapboxgl.accessToken = ACCESS_TOKEN;\nconsole.log(mapboxgl.version);\n\n// instantiate the map instance\nconst map = new mapboxgl.Map(\n  // Set defaults, allow the config to override\n  Object.assign(DEFAULT_MAP, MAP)\n);\n\nwindow.map = map;\n\n// HANDLE POPUPS\n\nconst popup = new mapboxgl.Popup();\n\n// Create a mapboxgl.Popup from the default popup component.\nconst showPopup = feature => {\n  popup\n    .setLngLat(feature.geometry.coordinates)\n    .setHTML(popupComponent(feature))\n    .addTo(map);\n  popup.on('close', () => {\n    map.flyTo({\n      center: DEFAULT_MAP.center,\n      duration: ANIMATION_DURATION\n    });\n  });\n\n  return popup;\n};\n\n// HANDLE MAP EVENTS\n\nmap.on('click', LAYER_ID, e => {\n  const feature = e.features[0];\n  setTimeout(() => {\n    map.flyTo({\n      center: feature.geometry.coordinates,\n      duration: ANIMATION_DURATION\n    });\n    showPopup(feature);\n  }, 200);\n});\n\n//FULL SCREEN MODE\n\nmap.addControl(new mapboxgl.FullscreenControl());\n\n// function createLegend() {\n//  const legendEl\n//}\n\n//Create Compass Button that Flys to Center\nfunction createCompass() {\n  const leftEl = document.querySelector('.mapboxgl-ctrl-bottom-left');\n  const compass = document.createElement('div');\n\n  compass.innerHTML = `<div class=\"mapboxgl-ctrl mapboxgl-ctrl-group\">\n      <button class=\"mapboxgl-ctrl-icon mapboxgl-ctrl-compass\" type=\"button\" aria-label=\"Reset North\"> \n      <span class=\"mapboxgl-ctrl-compass-arrow\" style=\"transform: rotate(0deg);\"></span> \n    </button> \n  </div>`;\n\n  compass.onclick = () => {\n    map.flyTo({\n      center: DEFAULT_MAP.center\n    });\n  };\n  leftEl.appendChild(compass);\n}\n\nlet state = {};\n\nmap.on('load', () => {\n  const nav = new mapboxgl.NavigationControl({ showCompass: false });\n  map.addControl(nav, 'top-left');\n  map.scrollZoom.disable();\n  createCompass();\n\n  const layerList = map.getStyle().layers;\n  let filteredLayers = layerList.filter(layer => {\n    const layerName = layer.id;\n    if (layerName.substring(0, 7) === 'toggle-' && layerName !== 'toggle-turismo') {\n      return true;\n    }\n    return false;\n  });\n\n  filteredLayers = filteredLayers.map(layer => {\n    return {\n      name: layer.id,\n      label: LAYERS[layer.id] ? LAYERS[layer.id].label : `No config for ${layer.id}`,\n      type: 'layer',\n      color: LAYERS[layer.id] ? LAYERS[layer.id].color : 'white'\n    };\n  });\n  const legend = document.getElementById(`legend`);\n  legend.innerHTML = legendComponent([...SOURCE_TYPES, ...filteredLayers]);\n\n  // HANDLE MAP LOAD\n  window.handleFilter = (layerOrSymbolType, type = null) => {\n    state[layerOrSymbolType] = !state[layerOrSymbolType];\n    // Toggle Active Class\n    const legendItem = document.getElementById(layerOrSymbolType);\n    legendItem.classList.toggle('active');\n    // Toggle Symbols\n    if (type === 'symbol') {\n      const activeFilters = Object.keys(state).filter(key => state[key]);\n      map.setFilter(LAYER_ID, [\n        state[layerOrSymbolType] ? 'in' : '!in',\n        'symbol',\n        ...activeFilters\n      ]);\n      return;\n    }\n    // Toggle Layers\n    map.setLayoutProperty(\n      layerOrSymbolType,\n      'visibility',\n      state[layerOrSymbolType] ? 'none' : 'visible'\n    );\n\n    return;\n  };\n\n  window.noFilter = () => {\n    map.setFilter(LAYER_ID, null);\n    filteredLayers.map(layer => map.setLayoutProperty(layer.name, 'visibility', 'visible'));\n    state = {};\n    document.querySelector('.legend-item').classList.add('active');\n  };\n\n  // const legend = document.getElementById(`legend`);\n  // legend.innerHTML = legendComponent(SOURCE_TYPES);\n});\n\n// Press Command to Scrollzoom\ndocument.body.addEventListener('keydown', function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.enable();\n  }\n});\ndocument.body.addEventListener('keyup', function(event) {\n  const { metaKey, ctrlKey } = event;\n  if (metaKey || ctrlKey) {\n    map.scrollZoom.disable();\n  }\n});\n\n/*map.on('load', function() {\n    map.loadImage('https://api.mapbox.com/styles/v1/guanacaste/cjj079axn0aqu2so55fx6ln2x/draft/sprite@2x.png?access_token=tk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImV4cCI6MTUzMjQ0NjY2MCwiaWF0IjoxNTMyNDQzMDU5LCJzY29wZXMiOlsiZXNzZW50aWFscyIsInNjb3BlczpsaXN0IiwibWFwOnJlYWQiLCJtYXA6d3JpdGUiLCJ1c2VyOnJlYWQiLCJ1c2VyOndyaXRlIiwidXBsb2FkczpyZWFkIiwidXBsb2FkczpsaXN0IiwidXBsb2Fkczp3cml0ZSIsInN0eWxlczp0aWxlcyIsInN0eWxlczpyZWFkIiwiZm9udHM6cmVhZCIsInN0eWxlczp3cml0ZSIsInN0eWxlczpsaXN0IiwidG9rZW5zOnJlYWQiLCJ0b2tlbnM6d3JpdGUiLCJkYXRhc2V0czpsaXN0IiwiZGF0YXNldHM6cmVhZCIsImRhdGFzZXRzOndyaXRlIiwidGlsZXNldHM6bGlzdCIsInRpbGVzZXRzOnJlYWQiLCJ0aWxlc2V0czp3cml0ZSIsInN0eWxlczpkcmFmdCIsImZvbnRzOmxpc3QiLCJmb250czp3cml0ZSIsImZvbnRzOm1ldGFkYXRhIiwiZGF0YXNldHM6c3R1ZGlvIiwiY3VzdG9tZXJzOndyaXRlIiwiYW5hbHl0aWNzOnJlYWQiXSwiY2xpZW50IjoibWFwYm94LmNvbSIsImxsIjoxNTMyMDM1ODQ0MDcyLCJpdSI6bnVsbH0.e6QkYHNuj8ZZt0Z0YNnSgQ&amp;', function(error, image) {\n        if (error) throw error;\n        map.addImage('park-11.svg', image);\n        map.addLayer({\n            \"id\": \"points\",\n            \"type\": \"symbol\",\n            \"source\": {\n                \"type\": \"geojson\",\n                \"data\": {\n                    \"type\": \"FeatureCollection\",\n                    \"features\": [{\n                        \"type\": \"Feature\",\n                        \"geometry\": {\n                            \"type\": \"Point\",\n                            \"coordinates\": [feature.geometry]\n                        }\n                    }]\n                }\n            },\n            \"layout\": {\n                \"icon-image\": \"park-11.svg\",\n                \"icon-size\": 11\n            }\n        });\n    });\n}); */\n"]}