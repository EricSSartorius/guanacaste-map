{"version":3,"sources":["src/config.js","src/components/popup.js","src/index.js"],"names":["MAP","ACCESS_TOKEN","feature","properties","Estación","Image","description","link","config","SOURCE_LAYER","TYPES","LAYER_ID","FLY_TO_ZOOM_LEVEL","ANIMATION_DURATION","DEFAULT_MAP","mapboxgl","accessToken","map","Map","Object","assign","window","exampleMap","createMarker","className","Marker","getMarkerElement","setLngLat","geometry","coordinates","addTo","createMarkers","features","markerElement","document","createElement","createLegendItem","div","span","labelSpan","symbolType","name","innerHTML","label","appendChild","getElementById","popup","Popup","showPopup","setHTML","on","flyTo","center","zoom","e","getFeatures","querySourceFeatures"],"mappings":"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","file":"src.be2d0c93.map","sourceRoot":"..","sourcesContent":["const MAP = {\n  // for creating mapboxgl.Map(). container defaults to 'map'\n  style: 'mapbox://styles/guanacaste/cjj079axn0aqu2so55fx6ln2x',\n  zoom: 9.18,\n  center: [-85.49304, 10.891421]\n};\n\nconst ACCESS_TOKEN =\n  'pk.eyJ1IjoiZ3VhbmFjYXN0ZSIsImEiOiJjamowNzhuYnAwZXU2M2txczhsc21mbDVsIn0.amJMu3O1jfjcbg-B1qC7ww';\n\nexport default {\n  LAYER_ID: 'turismo',\n  SOURCE_LAYER: 'Turismo',\n  FLY_TO_ZOOM_LEVEL: 12,\n  ANIMATION_DURATION: 2000,\n  MAP,\n  ACCESS_TOKEN,\n  TYPES: [\n    {\n      name: 'biological',\n      label: 'Biological'\n    },\n    {\n      name: 'tourist',\n      label: 'Touristo'\n    }\n  ]\n};\n","export default feature =>\n  `<div class=\"popup-header\">\n    <h3>${feature.properties.Estación}</h3>\n    <div class=\"popup-image\">\n      <img\n        src=\"${feature.properties.Image}\"\n        alt=\"Image del Estación ${feature.properties.Estación}\"\n      />\n    </div>\n  </div>\n  <div class=\"popup-content\">\n    <div class=\"popup-description\">\n      <p>${feature.properties.description}</p>\n    </div>\n    <a\n      class=\"popup-button\"\n      href=\"${feature.properties.link}\"\n      target=\"_new\"\n      >\n      Más informacíon\n    </a>\n  </div>\n  `;\n","import config from './config';\nimport popupComponent from './components/popup';\n\nconst {\n  ACCESS_TOKEN,\n  MAP,\n  SOURCE_LAYER,\n  TYPES,\n  LAYER_ID,\n  FLY_TO_ZOOM_LEVEL,\n  ANIMATION_DURATION\n} = config;\n\nconst DEFAULT_MAP = {\n  container: 'map',\n  center: [-85.49304, 10.891421],\n  zoom: 9.18\n};\n\nmapboxgl.accessToken = ACCESS_TOKEN;\n\n// instantiate the map instance\nconst map = new mapboxgl.Map(\n  // Set defaults, allow the config to override\n  Object.assign(DEFAULT_MAP, MAP)\n);\n\nwindow.exampleMap = map;\n\n// MARKERS\n\nconst createMarker = (feature, className) =>\n  new mapboxgl.Marker(getMarkerElement(feature, className))\n    .setLngLat(feature.geometry.coordinates)\n    .addTo(map);\n\n// make a marker for each feature and add to the map\nconst createMarkers = (features, className) =>\n  features.map(feature => createMarker(feature, className));\n\n// Generate the marker element on the fly in the DOM, using createElement\nconst getMarkerElement = (feature, className) => {\n  // create a HTML element for each feature\n  const markerElement = document.createElement('div');\n  // append default marker classname to provided class name\n  markerElement.className = `marker ${className}`;\n\n  return markerElement;\n};\n\n// LEGEND ITEMS\n\nconst createLegendItem = symbolType => {\n  const div = document.createElement('div');\n  const span = document.createElement('span');\n  const labelSpan = document.createElement('span');\n  span.className = `marker ${symbolType.name}-marker`;\n  labelSpan.innerHTML = symbolType.label || 'No label specified';\n  div.appendChild(span);\n  div.appendChild(labelSpan);\n  document.getElementById('legend-items').appendChild(div);\n};\n\n// HANDLE POPUPS\n\nconst popup = new mapboxgl.Popup();\n\n// Create a mapboxgl.Popup from the default popup component.\nconst showPopup = feature => {\n  popup\n    .setLngLat(feature.geometry.coordinates)\n    .setHTML(popupComponent(feature))\n    .addTo(map);\n  popup.on('close', e => {\n    map.flyTo({\n      center: DEFAULT_MAP.center,\n      zoom: DEFAULT_MAP.zoom,\n      duration: ANIMATION_DURATION\n    });\n  });\n\n  return popup;\n};\n\n// HANDLE MAP EVENTS\n\nmap.on('click', LAYER_ID, e => {\n  const feature = e.features[0];\n  setTimeout(() => {\n    map.flyTo({\n      center: feature.geometry.coordinates,\n      zoom: FLY_TO_ZOOM_LEVEL,\n      duration: ANIMATION_DURATION\n    });\n    showPopup(feature);\n  }, 200);\n});\n// HANDLE MAP LOAD\n\n// Retrieve the source feature data from mapbox\nconst getFeatures = symbolType =>\n  map.querySourceFeatures('composite', {\n    sourceLayer: SOURCE_LAYER,\n    filter: ['==', 'symbol', symbolType]\n  });\n\n// When the map loads, generate the markers\nmap.on('load', () => {\n  const featureData =\n    TYPES &&\n    TYPES.map(symbolType => {\n      const features = getFeatures(symbolType.name);\n      createLegendItem(symbolType);\n\n      // get the feature featureData and then create markers\n      // return createMarkers(features, `${symbolType.name}-marker`);\n    });\n});\n"]}